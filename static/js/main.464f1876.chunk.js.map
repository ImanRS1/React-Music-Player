{"version":3,"sources":["components/Player.js","components/Song.js","music-data.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","setIsPlaying","isPlaying","audioRef","setSongInfo","songInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","onChange","e","target","value","min","max","duration","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","songAnimation","alt","name","src","cover","artist","chillHop","audio","uudv4","LibrarySong","libraryStatus","setLibraryStatus","songSelectHandler","selectedSong","filter","state","currentWidth","window","matchMedia","mobileViewWatcher","mobileWidth","matches","addListener","Library","Nav","faMusic","App","useRef","useState","MusicData","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","height","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.464f1876.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faPause,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  setIsPlaying,\r\n  isPlaying,\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  }\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length])\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[songs.length - 1])\r\n        if (isPlaying) audioRef.current.play();\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length])\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[1]}, ${currentSong.color[0]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            onChange={dragHandler}\r\n            value={songInfo.currentTime}\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong, isPlaying, songInfo }) => {\r\n  const songAnimation = {\r\n    transform: `rotate(${songInfo.currentTime * 10}deg)`,\r\n  };\r\n  return (\r\n    <div className={`song-container ${isPlaying ? \"cover-animation\" : \"\"}`}>\r\n      <img\r\n        alt={currentSong.name}\r\n        src={currentSong.cover}\r\n        style={songAnimation}\r\n      ></img>\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import { v4 as uudv4 } from \"uuid\";\r\n\r\nconst chillHop = () => {\r\n  return [\r\n    {\r\n      name: \"Keep Going, Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#F5AE97\", \"#631F5C\"],\r\n      id: uudv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"WildLife, Cabin in the Woods\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg\",\r\n      artist: \"Philanthrope, Chromonicci\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10263\",\r\n      color: [\"#CA4C3E\", \"#40462A\"],\r\n      id: uudv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Lunar Cycles, Everything Fades to Blue\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/c209a7df7b9bc133dfff73ce86ebc3c57c2b73dd-1024x1024.jpg\",\r\n      artist: \"Sleepy Fish\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10031\",\r\n      color: [\"#D0DFDF\", \"#2A5779\"],\r\n      id: uudv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Small Town Palm Trees, Today Feels Like Everyday\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2021/01/6b1bb8736ee3e972747bc11f312e31cf7f5823e4-1024x1024.jpg\",\r\n      artist: \"Mama Aiuto\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=12124\",\r\n      color: [\"#B67583\", \"#374D4A\"],\r\n      id: uudv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Wake up, Lost Tape\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/2c3bd458bfb0713c89f991d1ce469523e95e3b53-1024x1024.jpg\",\r\n      artist: \"Evil Needle\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=8285\",\r\n      color: [\"#854C93\", \"#FDC19E\"],\r\n      id: uudv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Toft, FELTY movement\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/858b533ba20ff95bf5b401089b195d1a8cb43870-1024x1024.jpg\",\r\n      artist: \"Felty, Ezzy\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9312\",\r\n      color: [\"#EED04F\", \"#166DB0\"],\r\n      id: uudv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Sleeping In, HOME\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/0ca0fcf1ca26b9b75a0b6f6a16fc624593223d84-1024x1024.jpg\",\r\n      artist: \"Aso, Harris Cole\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=7934\",\r\n      color: [\"#F7E6DF\", \"#A76580\"],\r\n      id: uudv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Longing, Anecdotes\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/11/f78c39b4bb6313ddd0354bef896c591bfb490ff8-1024x1024.jpg\",\r\n      artist: \"Makso\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=11777\",\r\n      color: [\"#FBBC65\", \"#38508E\"],\r\n      id: uudv4(),\r\n      active: false,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default chillHop;\r\n","import React from \"react\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  id,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n  setLibraryStatus,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    const selectedSong = songs.filter((state) => state.id === id);\r\n    await setCurrentSong(selectedSong[0]);\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n\r\n    let currentWidth = window.matchMedia(\"(max-width: 768px)\");\r\n    const mobileViewWatcher = (mobileWidth) => {\r\n      if (mobileWidth.matches) {\r\n        setLibraryStatus(!libraryStatus);\r\n      }\r\n    };\r\n    mobileViewWatcher(currentWidth);\r\n    currentWidth.addListener(mobileViewWatcher);\r\n\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img alt={song.name} src={song.cover}></img>\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  song,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n  setLibraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            songs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            song={song}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n            libraryStatus={libraryStatus}\r\n            setLibraryStatus={setLibraryStatus}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\r\n  return (\r\n    <nav>\r\n      <h1>React Music Player</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useRef } from \"react\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport \"./styles/app.scss\";\nimport MusicData from \"./music-data\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  const audioRef = useRef(null);\n  const [songs, setSongs] = useState(MusicData());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animation,\n    });\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div\n      className={`App ${libraryStatus ? \"library-active\" : \"\"}`}\n      style={{\n        background: `linear-gradient(135deg, ${currentSong.color[0]}, ${currentSong.color[1]})`,\n        height: \"100vh\",\n      }}\n    >\n      <Nav setLibraryStatus={setLibraryStatus} libraryStatus={libraryStatus} />\n      <Song\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        songInfo={songInfo}\n      />\n      <Player\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        audioRef={audioRef}\n        song={Song}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}